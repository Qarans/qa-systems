<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=places"></script>
<script>
$(window).load(function () {
  if ($('#map-canvas').length > 0) {
    google.maps.event.addDomListener(window, 'load', showMaps);
  }
  {% if edit_data %}
      showMaps({{location.lat}}, {{location.lng}});
  {% else %}
    getMaps('jakarta');
  {% endif %}

});
function addToInput(data1, data2) {
  $('#latMaps').val(data1);
  $('#lngMaps').val(data2);
}

function getMaps(theLocation) {
  var geocoder =  new google.maps.Geocoder();
  geocoder.geocode( { 'address': theLocation}, function(results, status) {
    if (status == google.maps.GeocoderStatus.OK) {
      var lat = results[0].geometry.location.lat();
      var lng = results[0].geometry.location.lng();
      showMaps(lat, lng);
      addToInput(lat, lng);
    }
    else {
      alert("Your Location is not available in our maps, but you can still using this Location");
      getMaps('jakarta');
    }
  });
}
function showMaps(lat, lng) {
  var mapOptions = {
    zoom: 15,
    center: new google.maps.LatLng(lat, lng),
    mapTypeId: google.maps.MapTypeId.ROADMAP
  }
  var map     = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);
   var markers = [];

  var input =(document.getElementById('searchMaps'));
  map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);
  var searchBox = new google.maps.places.SearchBox((input));

  var getLatLng   = new google.maps.LatLng(lat,lng);
  var defMarker; addMarker(getLatLng);

 google.maps.event.addDomListener(input, 'keydown', function(e) {
    if (e.keyCode == 13) {
        e.preventDefault();
    }
  });

  google.maps.event.addListener(searchBox, 'places_changed', function() {
    var places = searchBox.getPlaces();

    for (var i = 0, marker; marker = markers[i]; i++) {
      marker.setMap(null);
    }

    // For each place, get the icon, place name, and location.
    markers = [];
    var bounds = new google.maps.LatLngBounds();
    for (var i = 0, place; place = places[i]; i++) {
      var image = {
        url: place.icon,
        size: new google.maps.Size(71, 71),
        origin: new google.maps.Point(0, 0),
        anchor: new google.maps.Point(17, 34),
        scaledSize: new google.maps.Size(25, 25),
      };

      bounds.extend(place.geometry.location);
      var deLocation = place.geometry.location;
      addMarker(deLocation);
      var lngZ = deLocation['B'];
      if (deLocation['B'] == null) {
        lngZ = deLocation['A'];
      }
      addToInput(deLocation['k'], deLocation['B']);
      console.log(deLocation);
    }

    map.fitBounds(bounds);
  });

  google.maps.event.addListener(map, 'bounds_changed', function() {
    var bounds = map.getBounds();
    searchBox.setBounds(bounds);
  });

  google.maps.event.addListener(map, "click", function(event) {
    var full  = event.latLng;
    var lat   = event.latLng.lat();
    var lng   = event.latLng.lng();
    addMarker(full);
    addToInput(lat, lng);
  });

  function addMarker(theLocation) {
    if (defMarker) {
      defMarker.setPosition(theLocation);
    }
    else{
      defMarker = new google.maps.Marker({
        position: theLocation,
        map: map,
      });
    }
  }
}

    </script>